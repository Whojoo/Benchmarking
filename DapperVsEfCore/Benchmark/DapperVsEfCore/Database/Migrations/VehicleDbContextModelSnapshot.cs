// <auto-generated />
using System;
using Benchy.DapperVsEfCore.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Benchy.DapperVsEfCore.Database.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    partial class VehicleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DapperVsEfCore")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.DamageImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("MediumUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OriginalUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SmallUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("DamageImage", "DapperVsEfCore");
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.EngineDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("MaxSpeed")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCilinders")
                        .HasColumnType("int");

                    b.Property<int>("Pk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EngineDetails", "DapperVsEfCore");
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("MediumUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OriginalUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SmallUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Images", "DapperVsEfCore");
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.Make", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Makes", "DapperVsEfCore");
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("MakeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("MakeId");

                    b.ToTable("Models", "DapperVsEfCore");
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.Option", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Options", "DapperVsEfCore");
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Tags", "DapperVsEfCore");
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EngineDetailsId")
                        .HasColumnType("bigint");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("ModelId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("ThumbnailId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EngineDetailsId")
                        .IsUnique();

                    b.HasIndex("ModelId");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("Vehicles", "DapperVsEfCore");
                });

            modelBuilder.Entity("OptionVehicle", b =>
                {
                    b.Property<long>("OptionsId")
                        .HasColumnType("bigint");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("OptionsId", "VehicleId");

                    b.HasIndex("VehicleId");

                    b.ToTable("OptionVehicle", "DapperVsEfCore");
                });

            modelBuilder.Entity("TagVehicle", b =>
                {
                    b.Property<long>("TagsId")
                        .HasColumnType("bigint");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("TagsId", "VehicleId");

                    b.HasIndex("VehicleId");

                    b.ToTable("TagVehicle", "DapperVsEfCore");
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.DamageImage", b =>
                {
                    b.HasOne("Benchmark.DapperVsEfCore.Models.Vehicle", null)
                        .WithMany("DamageImages")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.Image", b =>
                {
                    b.HasOne("Benchmark.DapperVsEfCore.Models.Vehicle", null)
                        .WithMany("DetailImages")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.Model", b =>
                {
                    b.HasOne("Benchmark.DapperVsEfCore.Models.Make", "Make")
                        .WithMany()
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Make");
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.Vehicle", b =>
                {
                    b.HasOne("Benchmark.DapperVsEfCore.Models.EngineDetails", "EngineDetails")
                        .WithOne()
                        .HasForeignKey("Benchmark.DapperVsEfCore.Models.Vehicle", "EngineDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Benchmark.DapperVsEfCore.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Benchmark.DapperVsEfCore.Models.Image", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngineDetails");

                    b.Navigation("Model");

                    b.Navigation("Thumbnail");
                });

            modelBuilder.Entity("OptionVehicle", b =>
                {
                    b.HasOne("Benchmark.DapperVsEfCore.Models.Option", null)
                        .WithMany()
                        .HasForeignKey("OptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Benchmark.DapperVsEfCore.Models.Vehicle", null)
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TagVehicle", b =>
                {
                    b.HasOne("Benchmark.DapperVsEfCore.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Benchmark.DapperVsEfCore.Models.Vehicle", null)
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Benchmark.DapperVsEfCore.Models.Vehicle", b =>
                {
                    b.Navigation("DamageImages");

                    b.Navigation("DetailImages");
                });
#pragma warning restore 612, 618
        }
    }
}
